#!/bin/bash

set -e

if [ -z "$1" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./restore.sh <backup_file>"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    ls -lh ./backups/backup_*.sql 2>/dev/null || echo "  –ù–µ—Ç –±—ç–∫–∞–ø–æ–≤"
    exit 1
fi

BACKUP_FILE="$1"

if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå –§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $BACKUP_FILE"
    exit 1
fi

echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ!"
echo "–§–∞–π–ª –±—ç–∫–∞–ø–∞: $BACKUP_FILE"
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " CONFIRM

if [ "$CONFIRM" != "yes" ]; then
    echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
    exit 0
fi

source .env

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞..."
docker compose -f docker-compose.prod.yml stop bot

echo "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker exec notification-bot-db-prod psql \
  -U "${POSTGRES_USER:-postgres}" \
  -d "${POSTGRES_DB:-notification_bot}" \
  -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞..."
cat "$BACKUP_FILE" | docker exec -i notification-bot-db-prod psql \
  -U "${POSTGRES_USER:-postgres}" \
  -d "${POSTGRES_DB:-notification_bot}"

echo "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
docker compose -f docker-compose.prod.yml start bot

echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
