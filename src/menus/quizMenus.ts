import {Menu} from '@grammyjs/menu';
import {getAllQuizzes, getQuestionsByQuiz} from '../services/quizService';
import {hasActiveSession} from '../services/quizSessionManager';
import {MyContext} from '../types/context';

export const quizListMenu = new Menu<MyContext>('quiz-list')
  .dynamic(async (ctx, range) => {
    const quizzes = await getAllQuizzes();
    
    if (quizzes.length === 0) {
      range.text('üì≠ –ö–≤–∏–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã', (ctx) => ctx.answerCallbackQuery());
      return;
    }

    for (const quiz of quizzes) {
      if (quiz._count.questions === 0) {
        continue;
      }

      const label = `${quiz.name} (${quiz._count.questions} –≤–æ–ø—Ä.)`;
      
      range.text(label, async (ctx) => {
        const userId = ctx.from?.id;
        const chatId = ctx.chat?.id;

        if (!userId || !chatId) {
          await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
          return;
        }

        if (hasActiveSession(BigInt(userId), BigInt(chatId))) {
          await ctx.answerCallbackQuery('‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–≤–∏–∑. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ–≥–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancelquiz');
          return;
        }

        const questions = await getQuestionsByQuiz(quiz.name);
        
        if (questions.length === 0) {
          await ctx.answerCallbackQuery(`‚ùå –í –∫–≤–∏–∑–µ '${quiz.name}' –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤`);
          return;
        }

        await ctx.answerCallbackQuery();
        await ctx.deleteMessage();

        const {startQuizWithQuestions} = await import('../handlers/commands');
        await startQuizWithQuestions(ctx, quiz.name, questions);
      }).row();
    }
  })
  .text('‚ùå –ó–∞–∫—Ä—ã—Ç—å', (ctx) => {
    ctx.deleteMessage();
    ctx.answerCallbackQuery();
  });

export const adminQuizMenu = new Menu<MyContext>('admin-quiz-menu')
  .text('‚ûï –°–æ–∑–¥–∞—Ç—å –∫–≤–∏–∑', async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.conversation.enter('createQuiz');
  })
  .row()
  .text('üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–≤–∏–∑–æ–≤', async (ctx) => {
    await ctx.answerCallbackQuery();
    const quizzes = await getAllQuizzes(true);
    
    if (quizzes.length === 0) {
      await ctx.reply('üì≠ –ö–≤–∏–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    let message = 'üìã –°–ø–∏—Å–æ–∫ –∫–≤–∏–∑–æ–≤:\n\n';

    quizzes.forEach((quiz: {name: string; isActive: boolean; description?: string | null; _count: {questions: number}}, index: number) => {
      const status = quiz.isActive ? '‚úÖ' : '‚ùå';
      message += `${index + 1}. ${status} ${quiz.name}\n`;
      message += `   üìù –í–æ–ø—Ä–æ—Å–æ–≤: ${quiz._count.questions}\n`;
      if (quiz.description) {
        message += `   ‚ÑπÔ∏è ${quiz.description}\n`;
      }
      message += '\n';
    });

    message += `üìä –í—Å–µ–≥–æ: ${quizzes.length} –∫–≤–∏–∑–æ–≤`;

    await ctx.reply(message);
  })
  .row()
  .text('üóë –£–¥–∞–ª–∏—Ç—å –∫–≤–∏–∑', async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.reply(
      '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /deletequiz <–Ω–∞–∑–≤–∞–Ω–∏–µ>\n\n' +
      '–ü—Ä–∏–º–µ—Ä: /deletequiz –ú–µ–¥–∏—Ü–∏–Ω–∞'
    );
  })
  .row()
  .back('‚óÄÔ∏è –ù–∞–∑–∞–¥');

export const adminQuestionMenu = new Menu<MyContext>('admin-question-menu')
  .text('‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å', async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.reply(
      '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /addquestion <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–≤–∏–∑–∞>\n\n' +
      '–ü—Ä–∏–º–µ—Ä: /addquestion –ú–µ–¥–∏—Ü–∏–Ω–∞'
    );
  })
  .row()
  .text('üìã –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤', async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.reply(
      '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /listquestions <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫–≤–∏–∑–∞>\n\n' +
      '–ü—Ä–∏–º–µ—Ä: /listquestions –ú–µ–¥–∏—Ü–∏–Ω–∞'
    );
  })
  .row()
  .text('üóë –£–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å', async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.reply(
      '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /deletequestion <id>\n\n' +
      '–ü—Ä–∏–º–µ—Ä: /deletequestion abc-123-def'
    );
  })
  .row()
  .back('‚óÄÔ∏è –ù–∞–∑–∞–¥');

export const adminMainMenu = new Menu<MyContext>('admin-main-menu')
  .submenu('üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–≤–∏–∑–∞–º–∏', 'admin-quiz-menu')
  .row()
  .submenu('‚ùì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞–º–∏', 'admin-question-menu')
  .row()
  .text('‚ùå –ó–∞–∫—Ä—ã—Ç—å', (ctx) => {
    ctx.deleteMessage();
    ctx.answerCallbackQuery();
  });

adminMainMenu.register(adminQuizMenu);
adminMainMenu.register(adminQuestionMenu);
